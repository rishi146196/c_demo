pipeline {
agent {
label 'docker' // Jenkins agent label
}


environment {
    IMAGE_NAME = "c_demo"
    DOCKER_REGISTRY = "rushikesh196/c_demo"
    KUBECONFIG = 'C:/Users/dell/.kube/config' // Path to kubeconfig for Windows/WSL
    DOCKER_TAG = "latest"  // Tag your image as "latest" or based on build number/commit hash
    K8S_DEPLOYMENT_NAME = "c-demo"  // Your Kubernetes Deployment name
    K8S_NAMESPACE = "default"  // Ensure this matches your Kubernetes namespace
    ARGOCD_APP_NAME = "c-demo"  // Your ArgoCD application name
}

stages {
    stage('Checkout') {
        steps {
            git 'https://github.com/rishi146196/c_demo.git'
        }
    }

    stage('Build Docker Image') {
        steps {
            bat 'docker build -t %DOCKER_REGISTRY%:%DOCKER_TAG% .'
        }
    }

    stage('Push to Docker Hub') {
        steps {
            withCredentials([usernamePassword(credentialsId: 'docker-hub-credentials', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                // Retry docker push up to 3 times if it fails
                retry(3) {
                    bat '''
                    echo %PASSWORD% | docker login -u %USERNAME% --password-stdin
                    docker tag %DOCKER_REGISTRY%:%DOCKER_TAG% %DOCKER_REGISTRY%:%DOCKER_TAG%
                    docker push %DOCKER_REGISTRY%:%DOCKER_TAG%
                    '''
                }
            }
        }
    }

    stage('Update Kubernetes Deployment') {
        steps {
            bat '''
            kubectl set image deployment/%K8S_DEPLOYMENT_NAME% %K8S_DEPLOYMENT_NAME%=%DOCKER_REGISTRY%:%DOCKER_TAG% -n %K8S_NAMESPACE%
            '''
        }
    }

    stage('Deploy to k8s') {
        steps {
            bat 'kubectl apply -f k8s\\deployment.yaml'
            bat 'kubectl apply -f k8s\\service.yaml'
            bat 'kubectl apply -f k8s\\Application.yaml'
        }
    }

    stage('Sync with ArgoCD') {
        steps {

            bat 'C:/Users/dell/argocd.exe login localhost:8081 --username admin --password e81T7CmVf2QGJd-z --insecure' 
            bat 'C:/Users/dell/argocd.exe app sync c-demo --insecure'

            bat '''
                C:/Users/dell/argocd.exe app sync %ARGOCD_APP_NAME% -n argocd
                '''
        }
    }
}

post {
    failure {
        echo '❌ Pipeline failed. Check logs above for details.'
    }
    success {
        echo '✅ Deployment successful.'
    }
}


}
